{"version":3,"sources":["personService.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","put","person","delete","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","displayNames","setDisplayNames","notificationMessage","setNotificationMessage","useEffect","personService","then","res","length","data","name","toLowerCase","includes","message","handleFilterChange","event","target","value","handleNumberChange","handleNameChange","submit","preventDefault","found","i","number","updatePerson","alert","window","confirm","newPerson","map","concat","content","type","catch","err","response","error","deleteContact","delPerson","find","console","log","Filter","onChange","PersonForm","onSubmit","Persons","onClick","Notification","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46409a09.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/persons'\n\nconst getAll = () => {\n\treturn axios.get(baseUrl)\n}\n\nconst create = (newObject) => {\n\treturn axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n\treturn axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst deleteContact = (person) => {\n\treturn axios.delete(`${baseUrl}/${person.id}`)\n}\n\nexport default { getAll, create, update, deleteContact }\n","import React, { useState, useEffect } from 'react'\nimport personService from './personService'\nimport ReactDOM from 'react-dom'\nimport './index.css'\n\nconst App = () => {\n\tconst [persons, setPersons] = useState([])\n\tconst [newName, setNewName] = useState('')\n\tconst [newNumber, setNewNumber] = useState('')\n\tconst [filter, setFilter] = useState('')\n\tconst [displayNames, setDisplayNames] = useState(persons)\n\tconst [notificationMessage, setNotificationMessage] = useState(null)\n\n\tuseEffect(() => {\n\t\tpersonService.getAll().then((res) => {\n\t\t\tif (persons.length !== res.data.length) {\n\t\t\t\tsetPersons(res.data)\n\t\t\t}\n\t\t})\n\t\tsetDisplayNames(\n\t\t\tpersons.filter((person) => {\n\t\t\t\treturn person.name.toLowerCase().includes(filter)\n\t\t\t})\n\t\t)\n\t}, [filter, persons])\n\n\tconst handleNameChange = (event) => {\n\t\tsetNewName(event.target.value)\n\t}\n\n\tconst handleNumberChange = (event) => {\n\t\tsetNewNumber(event.target.value)\n\t}\n\n\tconst handleFilterChange = (event) => {\n\t\tsetFilter(event.target.value)\n\t}\n\n\tconst submit = (event) => {\n\t\tevent.preventDefault()\n\n\t\t// Checks if person with number already exists\n\t\tlet found = ''\n\t\tfor (let i in persons) {\n\t\t\tif (persons[i].number === newNumber) {\n\t\t\t\tfound = newNumber\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\t// Checks for an update\n\t\tlet updatePerson = false\n\t\tfor (let i in persons) {\n\t\t\tif (persons[i].name === newName) {\n\t\t\t\tupdatePerson = persons[i]\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tif (found !== '') {\n\t\t\talert('Number has already been saved!')\n\t\t} else if (newName === '' || newNumber === '') {\n\t\t\talert('Name and Number cant be left empty')\n\t\t} else if (updatePerson) {\n\t\t\tconst update = window.confirm(\n\t\t\t\t`${newName} is already added to the phonebook. Do you want to replace the old number with the new one?`\n\t\t\t)\n\t\t\tif (update) {\n\t\t\t\tconst newPerson = { ...updatePerson, number: newNumber }\n\t\t\t\tpersonService.update(newPerson.id, newPerson).then((newObject) => {\n\t\t\t\t\tsetPersons(persons.map((person) => (person.id !== newPerson.id ? person : newPerson)))\n\t\t\t\t\tsetDisplayNames(persons.map((person) => (person.id !== newPerson.id ? person : newPerson)))\n\t\t\t\t\tsetNewNumber('')\n\t\t\t\t\tsetNewName('')\n\t\t\t\t})\n\t\t\t}\n\t\t} else {\n\t\t\t// Person not found, creates new person\n\t\t\tconst newPerson = { name: newName, number: newNumber }\n\n\t\t\tpersonService\n\t\t\t\t.create(newPerson)\n\t\t\t\t.then((newObject) => {\n\t\t\t\t\tsetPersons(persons.concat(newObject.data))\n\t\t\t\t\tsetDisplayNames(persons.concat(newObject.data))\n\t\t\t\t\tsetNewName('')\n\t\t\t\t\tsetNewNumber('')\n\t\t\t\t\tsetNotificationMessage({ content: `Added ${newObject.data.name}`, type: 'success' })\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tsetNotificationMessage({ content: `${err.response.data.error}`, type: 'error' })\n\t\t\t\t})\n\t\t}\n\t}\n\n\tconst deleteContact = (id) => {\n\t\tconst delPerson = persons.find((person) => person.id === id)\n\t\tconst del = window.confirm(`Are you sure you want to delete ${delPerson.name}?`)\n\t\tif (del) {\n\t\t\tpersonService\n\t\t\t\t.deleteContact(delPerson)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tsetPersons(persons.filter((person) => person.id !== delPerson.id))\n\t\t\t\t\tsetDisplayNames(persons.filter((person) => person.id !== delPerson.id))\n\t\t\t\t\tsetNotificationMessage({ content: `${delPerson.name} has been deleted`, type: 'success' })\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tsetNotificationMessage({\n\t\t\t\t\t\tcontent: `Information of ${delPerson.name} has already been removed from the server`,\n\t\t\t\t\t\ttype: 'error'\n\t\t\t\t\t})\n\t\t\t\t\tconsole.log(error)\n\t\t\t\t\tpersonService.getAll().then((res) => {\n\t\t\t\t\t\tsetPersons(res.data)\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>Phonebook</h2>\n\t\t\t<Notification message={notificationMessage} />\n\t\t\t<Filter filter={filter} handleFilterChange={handleFilterChange} />\n\t\t\t<PersonForm\n\t\t\t\tnewName={newName}\n\t\t\t\tnewNumber={newNumber}\n\t\t\t\thandleNumberChange={handleNumberChange}\n\t\t\t\thandleNameChange={handleNameChange}\n\t\t\t\tsubmit={submit}\n\t\t\t/>\n\t\t\t<h2>Numbers</h2>\n\t\t\t<Persons displayNames={displayNames} deleteContact={deleteContact} />\n\t\t</div>\n\t)\n}\n\nconst Filter = ({ filter, handleFilterChange }) => {\n\treturn (\n\t\t<p>\n\t\t\tFilter shown with <input value={filter} onChange={handleFilterChange} />\n\t\t</p>\n\t)\n}\n\nconst PersonForm = ({ newName, newNumber, handleNameChange, handleNumberChange, submit }) => {\n\treturn (\n\t\t<form onSubmit={submit}>\n\t\t\t<div>\n\t\t\t\tname: <input value={newName} onChange={handleNameChange} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\tnumber: <input value={newNumber} onChange={handleNumberChange} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<button type='submit'>Add</button>\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nconst Persons = ({ displayNames, deleteContact }) => {\n\treturn (\n\t\t<div>\n\t\t\t{displayNames.map((person, i) => (\n\t\t\t\t<p key={i}>\n\t\t\t\t\t{person.name} {person.number} <button onClick={() => deleteContact(person.id)}>delete</button>\n\t\t\t\t</p>\n\t\t\t))}\n\t\t</div>\n\t)\n}\n\nconst Notification = ({ message }) => {\n\tif (message === null) {\n\t\treturn null\n\t}\n\n\treturn <div className={message.type}>{message.content}</div>\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}